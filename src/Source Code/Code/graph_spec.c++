/************************************************************************************** * CODE FILE: graph_spec.c++ * PURPOSE	: define members of graph_spec class **************************************************************************************/#include "graph_spec.h"// Define default constructorgraph_spec::graph_spec(){ scaleSize=10; }			// Note all other variables automatically take default values// Define parameterized constructorgraph_spec::graph_spec(port_info port1, border_info border1, scale_info horiz_scale1,			scale_info vert_scale1, range_info horiz_range1, range_info vert_range1,			tick_info ticks1){	port=port1;														// Copy in all data	border=border1;	horiz_scale=horiz_scale1;	vert_scale=vert_scale1;	horiz_range=horiz_range1;	vert_range=vert_range1;	ticks=ticks1;		scaleSize=10;}// Define overloaded output operator for graph_specostream& operator<<(ostream &output_stream, graph_spec spec){	output_stream << "Graph Spec:\n";	output_stream << "\t Horiz: range (" << spec.horiz_range << "), scale(";	output_stream << spec.horiz_scale << ")\n";	output_stream << "\t Vert: range (" << spec.vert_range << "), scale(";	output_stream << spec.vert_scale << ")\n";	return output_stream;}// Define overloaded input operator for graph_specistream& operator>>(istream& input_stream, graph_spec& spec){	cout << "Horizontal:\n";	input_stream >> spec.horiz_scale;	input_stream >> spec.horiz_range;	cout << "Vertical:\n";	input_stream >> spec.vert_scale;	input_stream >> spec.vert_range;	return input_stream;}