/************************************************************************************** * HEADER FILE: complex.h * PURPOSE		: declare complex class **************************************************************************************/ #ifndef _complex_h#define _complex_h#include <iostream.h>#include <math.h>class complex{	public:		double re;																							// real component		double im;																							// imaginary component				complex();																							// default constructor		complex(const double real, const double imag);					// re/im parameter constructor		void set(const double real, const double imag);					// set both re/im				// overloaded arithmetic operators		complex& operator+=(const complex a);		complex& operator-=(const complex a);		complex operator-();																		// unary minus operator		complex& operator*=(const complex a);		complex& operator/=(const complex a);		friend complex operator+(const complex a, const complex b);		friend complex operator-(const complex k, const complex b);		friend complex operator*(const complex a, const complex b);		friend complex operator/(const complex a, const complex b);				// overloaded ^ operator - used for power operations		friend complex operator^(const complex a, const complex exponent);				// overloaded input/output operators		friend ostream& operator<<(ostream& output_stream, const complex a);		friend istream& operator>>(istream& input_stream, complex& complex_number);};#endif