/************************************************************************************** * HEADER FILE: extragraphclasses.h * PURPOSE		: declare: port_info class *											 border_info class *											 bound_info class *											 scale_info class *											 range_info class *											 tick_info class **************************************************************************************/#ifndef _extragraphclasses_h_#define _extragraphclasses_h_#include <iostream.h>class port_info{	public:		double top;																								// Global pixel co-ordinates		double left;																							// for window 		double width;		double height;				// Parameterized constructor - default port heigth and width if not specified		port_info (double WIDTH=500, double HEIGHT=500);		// Parameterized constructor - all dimensions specified		port_info (double TOP, double LEFT, double WIDTH, double HEIGHT);		// Overloaded output operator for port_info		friend ostream& operator<<(ostream& output_stream, port_info port);};class border_info{	public:		double top;																									// Inset Border sizes for		double bottom;																							// in all directions		double left;		double right;				// Parameterized constructor - default values for all parameters		border_info (double TOP=10, double BOTTOM=20, double LEFT=30, double RIGHT=10);		// Overloaded output operator for border_info		friend ostream& operator<<(ostream& output_stream, border_info border);};class bound_info{	public:		double top;																								// Bound global co-ordinates		double bottom;																						// for all dimensions		double left;		double right;		double width;																							// variable is derived		double height;																						// variable is derived				bound_info();																							// Default constructor		// Overloaded output operator for bound_info		friend ostream& operator<<(ostream& output_stream, bound_info bound);};class scale_info{	public:		double MajScale;																						// Scale divison setting		double MinTicks;																						// Ticks between divisons				// Parameterized constructor - default values for all parameters		scale_info (double MAJ=1, double MIN=5);		// Overloaded output operator for scale_info		friend ostream& operator<<(ostream& output_stream, scale_info scale);		// Overloaded input operator for scale_info		friend istream& operator>>(istream& input_stream, scale_info& scale);};class range_info{	public:		double Max;																									// Maximum value in range		double Min;																									// Minimum value in range				// Parameterized constructor - default values for all parameters		range_info (double MIN=-5, double MAX=5);		// Overloaded output operator for range_info		friend ostream& operator<<(ostream& output_stream, range_info range);		// Overloaded input operator for range_info		friend istream& operator>>(istream& input_stream, range_info& range);		double range();															// Return Max-Min - ie absolute range size};class tick_info{	public:		double MajTickSize;																			// Pixel Length of Major Tick		double MinTickSize;																			// Pixel Length of Minor Tick				// Parameterized constructor - default values for all parameters		tick_info(double MAJ=5, double MIN=2);		// Overloaded output operator for tick_info		friend ostream& operator<<(ostream& output_stream, tick_info tick);};#endif