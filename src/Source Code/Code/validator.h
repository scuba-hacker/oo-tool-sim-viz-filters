/************************************************************************************** * HEADER FILE: validator.h * PURPOSE		: declare validator class **************************************************************************************/ #ifndef _validator_h#define _validator_h#include "define_vars.h"#include "calc_preprocessor.h"#include "rCalculatorClass.h"#include "newstring.h"#include "ulist.h"#include "stringobject.h"class calculator;																										// forward declarationclass validator{	private:		calculator *connected_calculator;											// Calculator to be validated		calc_preprocessor *connected_preprocessor;						// Preprocessor service provider		// Verify equation with identifier 'name_string' for circular definitions		status verify(const string_class name_string, string_class dependents="");	public:		// Constructor linking preprocessor service provider to validator		validator(calc_preprocessor *preprocessor);		// Validate all equations within 'connect_calculator'		status validate(calculator *connect_calculator);		string_class error_trace;				// return last error_trace generated by failed verify};#endif