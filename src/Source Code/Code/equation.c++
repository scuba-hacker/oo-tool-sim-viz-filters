#include <Types.h>#include <Memory.h>#include <Quickdraw.h>#include <Fonts.h>#include <Events.h>#include <Menus.h>#include <Windows.h>#include <TextEdit.h>#include <Dialogs.h>#include <OSUtils.h>#include <ToolUtils.h>#include <SegLoad.h>#include <iostream.h>#include <SIOUX.h>#include <stdio.h>#include <string.h>#include <math.h>const double PI=asin(1)*2;#include "graph_device.h"void Initialize(void);void main(void){	port_info port;		border_info border;	range_info horiz_range(-PI,PI);	scale_info horiz_scale(PI/4,3);	range_info vert_range(-1,1);	scale_info vert_scale(0.1,4);		tick_info ticks;	port_info port2(600,50,100,100);	scale_info horiz_scale2(pi,1);	scale_info vert_scale2(0.5,1);	SIOUXSettings.asktosaveonclose = FALSE;	SIOUXSettings.showstatusline = TRUE;	SIOUXSettings.columns = 10;	SIOUXSettings.rows = 5;	SIOUXSettings.toppixel = 600;	SIOUXSettings.leftpixel = 500;	Initialize();		graph_device casio(port, border, horiz_scale, vert_scale, horiz_range, vert_range, ticks);	graph_device texas(port2, border, horiz_scale2, vert_scale2, horiz_range, vert_range, ticks);		texas.blank_graph();	casio.blank_graph();		// casio.hidegraph_device();	do	{	}	while (!Button());	// casio.showgraph_device();	do	{	}	while (Button());		double Sample_Period=0.1;		MoveTo(casio.translate_x(horiz_range.Min),casio.translate_y(sin(horiz_range.Min)));	// first sample position	ForeColor(blueColor);	for (double x=horiz_range.Min; x<horiz_range.Max; x+=Sample_Period)	{		casio.PlaceCross(4);		LineTo(casio.translate_x(x+Sample_Period), casio.translate_y(sin(x+Sample_Period)));	}		do	{	}	while (!Button());	do	{	}	while (Button());	texas.showGraph();	Sample_Period=0.5;		MoveTo(texas.translate_x(horiz_range.Min),texas.translate_y(cos(horiz_range.Min)*cos(horiz_range.Min)));	// first sample position	ForeColor(blueColor);	for (double x=horiz_range.Min; x<horiz_range.Max; x+=Sample_Period)	{		casio.PlaceCross(4);		LineTo(texas.translate_x(x+Sample_Period), texas.translate_y(cos(x+Sample_Period)*cos(horiz_range.Min)));	}	do	{	}	while (!Button());	do	{	}	while (Button());/*	do	{		cin >> x >> y;		SetPort(mainPtr);		plot(x,y);	}	while (x!=0);*/}//MW specified argument and return type.void Initialize(void){	OSErr		error;	SysEnvRec	theWorld;				/* Initialize all the needed managers. */	InitGraf(&qd.thePort);	InitFonts();	InitWindows();	InitMenus();	TEInit();	InitDialogs(nil);	InitCursor();}