/************************************************************************************** * HEADER FILE: calc_process.h * PURPOSE		: declare IO_map class **************************************************************************************/#ifndef _calc_process_h#define _calc_process_h#include "ulist.h"class calc_process{	public:		string_class data_set_name;		string_class graph_spec_name;		ulist<string_class> set_input_names;		ulist<string_class> map_names;				void load_list(string_class input_string, int list)		{			char input_chars[1000];													// Buffer1 to hold record fields as whole			char name_chars[100];														// Buffer2 to hold individual name				input_string.string_copy(input_chars);					// Extract char array from input_string			istrstream input_stream(input_chars);						// Record_stream points to buffer1				ulist<string_object> names_list;								// List for holding all names			while(input_stream >> name_chars)								// Get names from input_stream			{	// Add each name to list using order found in input_string				names_list.add_to_end(string_object(name_chars);			}			if (list==0)										// load set_input_names list				set_input_names=names_list;			else				map_names=names_list;		}				friend ostream& operator<<(ostream& output_stream, const calc_process output_map)		{			output_stream << "Data Set Name: " << output_map.data_set_name << "\n";			output_stream << "Graph Spec Name: " << output_map.graph_spec_name << "\n";			output_stream << "Set Input Names: " << output_map.set_input_names << "\n";			output_stream << "Map Names: " << output_map.map_names << "\n";			return output_stream;		}		};#endif