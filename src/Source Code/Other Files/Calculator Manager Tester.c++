#include <iostream.h>#include "rCalculatorClass.h"#include "newstring.h"#include "calc_preprocessor.h"#include "validator.h"#include "ulist.c++"#include "CalculatorManager.h"#include <SIOUX.h>const int preprocessor_array_length=47;const user_label labels[preprocessor_array_length]={	user_label ("sqrt", "SQUARE_ROOT"),	user_label ("cbrt", "CUBE_ROOT"),	user_label ("xroot", "XROOT"),	user_label ("sin", "SINE"),	user_label ("cos", "COSINE"),	user_label ("tan", "TANGENT"),	user_label ("asin", "ARCSINE"),	user_label ("acos", "ARCCOSINE"),	user_label ("atan", "ARCTANGENT"),	user_label ("sinh", "SINE-H"),	user_label ("cosh", "COSINE-H"),	user_label ("tanh", "TANGENT-H"),	user_label ("asinh", "ARCSINE-H"),	user_label ("acosh", "ARCCOSINE-H"),	user_label ("atanh", "ARCTANGENT-H"),	user_label ("ln", "NATURAL_LOG"),	user_label ("log10", "LOG10"),	user_label ("log2", "LOG2"),	user_label ("logx", "LOGX"),	user_label ("arg", "ARGUMENT"),	user_label ("MILLI", "MILLI"),	user_label ("MICRO", "MICRO"),	user_label ("NANO","NANO"),	user_label ("PICO","PICO"),	user_label ("FEMTO", "FEMTO"),	user_label ("KILO", "KILO"),	user_label ("MEGA", "MEGA"),	user_label ("GIGA", "GIGA"),	user_label ("TERA", "TERA"),	user_label ("PETA", "PETA"),	user_label ("EXA",  "EXA"),	user_label ("SUM", "SUMMATION"),	user_label ("PROD", "PRODATION")};name_object calc_constants[3]={	name_object ("pi", complex_container (CONSTANT, complex(3.1415926535897932385,0))),	name_object ("e", complex_container (CONSTANT, complex(2.7182818284590452354,0))),	name_object ("j", complex_container (CONSTANT, complex(0,1)))};int number_of_constants=3;void main(void){	SIOUXSettings.asktosaveonclose = FALSE;	SIOUXSettings.showstatusline = TRUE;	// lets first set up the constant array for all calculators	calculator::build_internal_constants(calc_constants, number_of_constants);	ulist<name_object> test;		// these two lines required to stop link errors	cout << test;	calc_preprocessor preprocessor(labels, calculator::token_names, preprocessor_array_length);	complex_container::postprocessing=&preprocessor;		calculator_manager manager(&preprocessor);			manager.interface();}